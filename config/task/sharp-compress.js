// Generated by ChatGPT 3.5

const sharp = require('sharp');
const glob = require('glob');
const fs = require('fs');
const path = require('path');

const inputDir = 'static/asset/';
const outputDir = 'dist/static/asset/';
const quality = 80;

// Ensure the output directory exists
if (!fs.existsSync(outputDir)) {
  fs.mkdirSync(outputDir, { recursive: true });
}

// Define the image file patterns to match
const imagePatterns = [
  '**/*.jpg',
  '**/*.png',
  '**/*.jpeg',
  '**/*.tif',
];

// Generate an array of file paths matching the patterns
const imagePaths = imagePatterns.map((pattern) => glob.sync(path.join(inputDir, pattern)));

// Flatten the array of arrays into a single array of file paths
const allImagePaths = [].concat(...imagePaths);

// Process each image
allImagePaths.forEach((inputPath) => {
  const relativePath = path.relative(inputDir, inputPath);
  const outputPath = path.join(outputDir, path.dirname(relativePath), path.basename(relativePath, path.extname(relativePath)) + '.webp');

  // Ensure the output directory for the current file exists
  const outputDirForFile = path.dirname(outputPath);
  if (!fs.existsSync(outputDirForFile)) {
    fs.mkdirSync(outputDirForFile, { recursive: true });
  }

  // Convert the image to WebP format with the specified quality using Sharp
  sharp(inputPath)
    .webp({ quality })
    .toFile(outputPath, (err, info) => {
      if (err) {
        console.error(`Error processing ${inputPath}: ${err.message}`);
      } else {
        console.log(`Processed ${inputPath} => ${outputPath}`);
      }
    });
});

