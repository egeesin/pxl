/**** Theme Modifier (HTML/:root) Settings
 */
.s-themeMod__root{
	/* Custom Properties */
	--borderType: 0 0 transparent;
	--borderColor: var(--colorBack);
	--embossType: 0 0 transparent;
	--shadowType: 0 0 transparent;
	/* --shadowColor: rgb(0 0 0 / .33); */
	--shadowColor: var(--colorDeep);
	/* --borderType: 0 0 0 1px var(--colorBack); */
	/* --shadowType: 0 .5em 0 -.25em var(--shadowColor); */

	/* Affected elements */
	:is(.c-card,.c-nav.-typeFlyout.-layoutVertical.js-visible,
	[id^="toggleNav-"]:checked + .c-nav.-typeFlyout.-layoutVertical,
	[id^="toggleNav-"]:checked + .c-nav.-typeTree[class*=-expand],
	.c-nav.-typeFlyout.-layoutHorizontal,
	.c-nav.-typeFlyout .c-nav__submenu,
	/* .c-nav.-typeTree, */
	/* .c-toggleExpand, */
	.-viewNotification){
		/* TODO: Style Modifiers for hidden-overflowed card elements may need margin-right:1px */
		box-shadow: var(--borderType), var(--embossType), var(--shadowType);
	}
	.c-nav.-typeFlyout.-layoutHorizontal .c-nav__item.-viewIconOnly
	> .c-nav__anchor
	> :is(:is(svg,.c-iconWrapper) + :is(span,b), :is(span:not(.c-iconWrapper), b):first-child) {
		@media (any-hover: hover) {
			box-shadow: var(--borderType), var(--embossType), var(--shadowType);
		}
	}
	/* Check if browser supports :has pseudo (all browsers except Firefox for ex. as of 2022) */
	@supports (selector(*:has(*))) {
		.c-nav.-typeFlyout.-layoutVertical:has(.c-nav__anchor:focus-within){
			box-shadow: var(--borderType), var(--embossType), var(--shadowType);
		}
	}
	/* .c-nav.-typeFlyout.-layoutVertical:focus-within{ */

	/* Border Styles */
	&.-borderNone { --borderType: 0 0 transparent}
	&.-borderNormal { --borderType: 0 0 0 var(--borderS) var(--colorBack)}
	&.-borderHairline { --borderType: 0 0 0 var(--borderHairline) var(--colorBack)}
	&.-borderThick { --borderType: 0 0 0 2px var(--colorBack)}

	/* Shadow Effects */
	&.-shadowNone { --shadowType: 0 0 transparent}
	&.-shadowSharp {
		--shadowType: 0 .5em 0 -.25em var(--shadowColor);
		/* --shadowType: 0 0 0 1px var(--colorBack); */
		/* --shadowType: .25em .25em 0 0 var(--colorDeep); */
		/* --shadowType: 0 .5em 0 -.25em var(--shadowColor), 0 0 0 1px var(--colorBack); */
	}
	&.-shadowOld {--shadowType: .25em .25em var(--shadowColor);}
	/* Source: https://m1.material.io/material-design/elevation-shadows.html#elevation-shadows-elevation-android */
	&.-shadowMaterialV1 {--shadowType: 0 10px 20px rgb(0 0 0 / .19), 0 6px 6px rgb(0 0 0 / .23);}
	&.-shadowMaterialV1.-shadowColorGlowing {--shadowType: 0 10px 20px rgb(255 255 255 / .14), 0 6px 6px rgb(255 255 255 / .18)}
	&.-shadowMacOS {--shadowType: 0 22px 70px 4px rgb(0 0 0 / .56);}
	&.-shadowMacOS.-shadowColorGlowing {--shadowType: 0 22px 70px 4px rgb(255 255 255 / .46);}
	&.-shadowSmooth {--shadowType: 0px 2px 4px var(--colorTextOpac20)/*Heavily translucent, dark color*/;}

	/* Shadow Colors */
	&.-shadowColorGlowing { --shadowColor: rgb(255 255 255 / .20); }
	&.-shadowColorReflect { --shadowColor: var(--colorBack);}

	/* Emboss Effect Overrides */
	&.-embossNone {--embossType: 0 0 transparent}
	&.-embossSmooth {--embossType: inset 0px -2px 2px var(--colorTextOpac075)/*Heavily translucent, dark color*/;}
	&.-embossWinClassic{
		/* --shadowType: 3px 3px 0px 0px #EBEBEB inset, -3px -3px 0px 0px #818181 inset; */
		/* --shadowType: 3px 3px 0px 0px #EBEBEB33 inset, -3px -3px 0px 0px #81818133 inset; */
		/* --embossType: 3px 3px 0px 0px #EBEBEB33 inset, -3px -3px 0px 0px #81818133 inset; */
		--embossType: -.25em -.25em 0 0 var(--colorTextOpac60) inset, .25em .25em 0 0 var(--colorForeBrighter) inset;
		@media (prefers-color-scheme: dark) {
			--embossType: -.25em -.25em 0 0 var(--colorDeep) inset, .25em .25em 0 0 var(--colorTextOpac20) inset;
		}
	}

	/*** Acetate and Neumorphism Style
	 */
	&:where(.-presetAcetate,.-presetNeumorphism) {
		--colorBg: var(--colorBase);
		body {
			background-color: var(--colorBase);
		}
		:is(.c-card,.c-nav:not([class*=-expand])){
			background-color: initial;
		}
	}

	/*** Acetate Style
	*
	* In this style, every element boundries are transparent and has singular background
	*/
	/* Resets other presets (like Neumorphism) but the practice below must be something to avoid for. */
	.-presetNeumorphism &:where(.-presetAcetate) {
		:is(
		.c-card,
		.c-nav.-typeFlyout:not([class*=-expand]),
		.c-nav:not(.-typeTree)[class*=-expand]:focus-within,
		.c-nav:not(.-typeTree)[class*=-expand].js-visible,
		.c-nav:not(.-typeTree) .c-nav__submenu,
		.c-nav.-typeFlyout
		),
		[id^=toggleNav-]:checked + .c-nav:not(.-typeTree)[class*=-expand]
		{
			&:after,&:before {
				display:none;
				/* Reset pseudo shadows*/
			}
		}
	}

	/*** Neumorphism Style
	*
	*/
		/* &[class^="-shadow"] .c-card{ */
		/* 	box-shadow: none; */
		/* } */
	&.-presetNeumorphism{
		background-color: initial;
	}
	&:where(.-presetNeumorphism) {
		.c-nav:not(.-typeTree) .c-nav__submenu	{
			/* position: relative; */
			/* overflow: visible; */
			/* box-shadow: none !important; */
			&:after {
				z-index: -99;
				content: "";
				border-radius: inherit;
				position: absolute;
				top: 0;
				left: 0;
				display: block;
				width: 100%;
				height: 100%;
				box-shadow: 15px 15px 13px -11px var(--colorBack);
			}
		}
		.c-nav.-typeFlyout{
			&:not(.-layoutHorizontal):before {
				background-image: linear-gradient(90deg, var(--colorBaseTransparent) -80%, var(--colorBaseTransparent) 35%, var(--colorFore) 90%);
			}
			&:after {
				background-image: linear-gradient(90deg, var(--colorBack) -80%, var(--colorBaseTransparent) 35%, var(--colorBaseTransparent) 90%);
			}
		}

		:is(.c-card, .c-nav.-typeFlyout){
			position: relative;
			&:after, &:before {
				content: "";
				position: absolute;
				z-index: -99;
				top: 0;
				left: 0;
			}
		}
		:is(
		.c-card,
		.c-nav.-typeFlyout:not([class*=-expand]),
		.c-nav:not(.-typeTree)[class*=-expand]:focus-within,
		.c-nav:not(.-typeTree)[class*=-expand].js-visible
		),
		[id^=toggleNav-]:checked + .c-nav:not(.-typeTree)[class*=-expand]
		{
			overflow: visible; /* In order to show pseudo shadows. */
			/* border-radius: .6em; */
			/* box-shadow: none !important; */

			&:after,&:before {
				/* content: ""; */
				border-radius: inherit;
				display: block;
				/* padding: inherit; */
				position:absolute;
				top:0;
				left:0;
				width: 100%;
				height: 100%;
			}
			/* Lightning */
			&:before{
				/* box-shadow: -2px -2px 13px #ffffff3d; */
				box-shadow: -2px -2px 13px var(--colorFore);
				/* background-image: linear-gradient(145deg, transparent -80%, transparent 35%, var(--colorFore) 90%); */

				background-image: linear-gradient(145deg, var(--colorBaseTransparent) -80%, var(--colorBaseTransparent) 35%, var(--colorFore) 90%);

				/* mix-blend-mode: soft-light; */
			}
			/* Shadow */
			&:after{
				/* box-shadow: 15px 15px 13px -11px #31313157; */
				/* box-shadow: 15px 15px 13px -11px var(--colorDeep); */
				box-shadow: 15px 15px 13px -11px var(--colorBack);
				/* background-image: linear-gradient(145deg, var(--colorBack) -80%, transparent 35%, transparent 90%); */

				background-image: linear-gradient(145deg, var(--colorBack) -80%, var(--colorBaseTransparent) 35%, var(--colorBaseTransparent) 90%);

				/* mix-blend-mode: overlay; */
			}
		}
	}
}
