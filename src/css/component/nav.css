ul.c-nav, .c-nav ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

/* Don't forget that styles before is for only __every__ nav objects! */
.c-nav {
	&.-viewDropdown{
		/* opinionated */
		border-radius: 0 0 .5em 0;
		padding: .5em 0 .5em;

		@media (--desk){
			/* opinionated */
			border-radius:0;
			padding: 0;
			> .c-nav__item > .c-nav__submenu {
				padding-top: 0;
				border-radius: 0 0 .5em .5em;
			}
		}
		.c-nav__submenu {
			border-radius: .5em;
			padding: .5em 0;
		}

		/* opinionated */
	}
	&.-viewTree, &.-viewDropdown{
		background-color: color-mod(var(--baseColor) l(+3%));
		/*DOESNT WORK background-color: var(--foreColorBrighter); */
		/* @supports ( (-webkit-backdrop-filter: blur(1px)) or (backdrop-filter: blur(1px)) ) { */
		/* 	background-color: color-mod(var(--baseColor) l(+3%) a(80%)); */
		/* 	-webkit-backdrop-filter: blur(3px); */
		/* 			backdrop-filter: blur(3px); */
		/* } */
		.c-nav__submenu {
			background-color: color-mod(var(--baseColor) l(+6%));
			/*DOESNT WORK background-color: var(--foreColorBrighter); */
			/* @supports ( (-webkit-backdrop-filter: blur(1px)) or (backdrop-filter: blur(1px)) ) { */
			/* 	background-color: color-mod(var(--baseColor) l(+6%) a(80%)); */
			/* 	-webkit-backdrop-filter: blur(3px); */
			/* 			backdrop-filter: blur(3px); */
			/* } */

		}
	}
	input[type="search"]{
		/* may be opinionated */
		border:none !important;
		text-align:center;
		display:block;
		&.--viewWithIcon {
			font-family: 'pxl-icon', var(--mainFont);
		}
	}

	hr {
		color: var(--textColorTranslucent);
	}
}
.c-nav__item {
	position: relative;
	a {
		/* --borderWidth: 1px; */
		--borderWidth: 0;
		/* padding: calc(.25em - var(--borderWidth)) calc(.8em - var(--borderWidth)); */
		padding: .25em .8em;

		border-radius: var(--navRadius);
		/* background-color: var(--baseColor); */
		display: block;
		text-decoration: none;
		border: var(--borderWidth) solid transparent;
		/* white-space: nowrap; /1* force to single line *1/ */
		overflow: hidden;
		&, &:hover, &:active {
			color: currentColor;
		}
	}
}

.c-nav__item.-currentPage {
	> a {
		font-style: italic;
	}

	> ul{
		font-style: initial;
	}
}

.c-nav {
	&.-viewTree, &.-viewDropdown.-positionTop {
		margin-bottom: 1em;
	}
	&.-viewTree, &.-viewDropdown.-positionSide {
		input[type='search'] {
			width:90%;
			margin: auto;
			padding:.5em 0 !important;
		}
	}
}
.c-nav.-viewTree {
	.c-nav__submenu {
		margin-left: 1em;

		/* opinionated */
		border-radius: .5em 0 0 0em;
		overflow: hidden;
	}
	&.-collapsible {
		margin-left: auto;
		margin-right: auto;
		font-size: 1.25rem;
		overflow: hidden;
		max-height: 2rem; /*Size of button*/
		padding: 0;
		width: 70%;
		/* opinionated */
		border-radius: .5em;
		@media (--palm) {
			width: 24em;
		}
		> .c-toggleTrigger {
			display: block;
		}
		> .c-nav__item {
			&.-hasChildren:after{
				position: absolute;
				content: "›";
				line-height: 2;
				display: block;
				font-weight: 600;
				top: 0;
				left: 0;

				/* background-color: red; */
			}
			& > .c-nav__submenu {
				height: 0;
			}
			/* Submenu opens sideways */
			&:hover > .c-nav__submenu, &:focus > .c-nav__submenu{
				height: auto;
			}
		}
	}

	/* Classes doesn't work with these pseudos so let's assume li is .c-nav__item since this is only class that applies to li element for now. */
	/* li = .c-nav__item */
	li {
		box-shadow: .5em calc(-.5em - 1px) 0 -.5em var(--textColorTranslucent);
	}
	li:first-of-type, hr + li { 
		box-shadow: none;
	}
	hr {
		margin: 0 0 .05em;
		padding: 0;
		border-top: .2em solid;
	}
}

.c-nav.-viewDropdown {
	/* In Safari submenu doesn't place in front */
	position: relative;
	z-index: 1;
	/* In Safari submenu doesn't place in front */

	/* Affects every depth */
	&.-positionSide {
		width: var(--sidebarWidth);

		& .c-nav__submenu {
			width: 100%;
		}

		& > .c-nav__item {
			width: 100%;
		}

		&.-collapsible {
			font-size: 1.25rem;
			z-index: 555;
			/* position: absolute; */
			position: fixed;
			top: 0;
			/* left: 0; */
			left: -1px; /* Sometimes its reachable */
			transform: translate3d(calc(-1 * var(--sidebarWidth)), 0, 0);
			transition: .2s transform;
			> .c-toggleTrigger {
				/* opinionated */
				border-radius: .5em;
				margin: .5em;

				display: block;
				position: absolute;
				top: 0;
				left: 100%;
				width: auto;
			}
		}

		li {
			box-shadow: .5em calc(-.5em - 1px) 0 -.5em var(--textColorTranslucent);
		}
		li:first-of-type, hr + li { 
			box-shadow: none;
		}
		hr {
			margin: 0 0 .05em;
			padding: 0;
			border-top: .2em solid;
		}
	}
	.c-nav__item {
		&.-hasChildren {
			position: relative;
			.c-nav__item {
				float: none;
				& > a {
					width: 100%
				}
			}
			& > a[href="#"] {
				cursor: e-resize;
			}
		}
		&.-hasChildren:after{
			position: absolute;
			content: "⟩";
			display: block;
			font-weight: 600;
			/* background-color: red; */
		}
		& > .c-nav__submenu {
			left: -9999px;
		}
		/* Submenu opens sideways */
		&:hover > .c-nav__submenu, &:focus > .c-nav__submenu{
			top: 0;

			/* opinionated */
			top: -.5em;

			left: 100%;
		}

		/* Change the bg/text color of nav item when hovering */
		&:hover, &:focus {
			> a {
				background-color: var(--textColor);
				color: var(--baseColor);
				/* background-color: var(--textColorTransparent); */
				/* border-color: currentColor; */
				/* border-width: var(--borderWidth); */
			}
		}
		/* &:active { */
		/* 	> a { */
				/* --borderWidth: 2px; */
				/* background-color: var(--textColor); */
				/* color: var(--baseColor); */
			/* } */
		/* } */

		/* NOT WORKING YET: Change the color of arrow when hovering a nav item that has Submenu */
		/* &.-hasChildren { */
		/* 	&:hover, &:focus { */
		/* 		:after { */
		/* 			color: var(--baseColor); */
		/* 		} */
		/* 	} */
		/* } */

	}
	/* Every c-nav__submenu */
	& .c-nav__submenu {
		/* min-width: 100%; */
		/* max-height: 60vh; */
		/* overflow: auto; */
		position: absolute;
		z-index: 444;
	}
	& > .c-nav__item {
		/*			 The arrow indicator		 */
		/* First and deeper depths */
		&.-hasChildren:after, &.-hasChildren .-hasChildren:after{
			right: 0;
			top: 0;
			width: .8em;
			height: 100%;
			text-align: center;
			line-height: 1.75;
			transform: rotate(0);
		}
	}
	&.-justified {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		/* & * { */
		/* 	margin: auto; */
		/* 	@media (--wall) { */
		/* 		margin: initial; */
		/* 	} */
		/* } */
	}

	&.-positionTop {
		width: 100%;
		max-width: var(--maxContentWidth);
		margin-top: 1em;
		margin-left: auto;
		margin-right: auto;
		padding: 0 1.5em;
		@media (--mall) {
			border-radius: .5em;
		}

		.c-nav__submenu {
			min-width: 100%;
			li {
				box-shadow: .5em calc(-.5em - 1px) 0 -.5em var(--textColorTranslucent);
			}
			li:first-of-type, hr + li { 
				box-shadow: none;
			}
			hr {
				margin: 0 0 .05em;
				padding: 0;
				border-top: .2em solid;
			}
		}

		.c-nav__item {
			float: left;
		}
		> .c-nav__item {
			&.-hasChildren > a[href="#"] { /* 1st depth */
				cursor: s-resize;
			}
			&:hover, &:focus {
				> .c-nav__submenu { /* Submenu opens below */
					top: 100%;
					left: 0;
				}
			} /* The arrow indicator */
			&.-hasChildren:after { /* Affects first depth only */
				top: auto;
				right: auto;
				left: 0;
				bottom: 0;
				width: 100%;
				height: .2em;
				line-height: 0;
				text-align: center;
				transform: rotate(90deg);
			}
			&.-hasChildren:hover:after, &.hasChildren:focus:after {
				transform: rotate(270deg);
			}
		}
		> hr { /* Fake Vertical Line Seperator*/
			padding-top: 1em;
			border: 0;
			border-left: 1px solid var(--textColorTranslucent);
			margin: .5em .5em 0;
		}
		input[type="search"]{
			order: 999;
			width: 8em;
		}
	}
}

#c-toggleNav {
	display: none;
	/* &::-ms-check { */
	&:checked {
		& + .c-nav.-positionSide.-collapsible {
			&.-viewDropdown {
				transform: translate3d(0,0,0)
			}
		}
		& + .c-nav.-viewTree.-collapsible {
			width: auto;
			max-height: 100%;
			@media (--palm) {
				/* padding: 0 15%; */
				/* 24em isn't really connected to another value or any variable so the line below must be opinionated for now. */
				padding: 0 calc( ( 100vw - 24em ) / 2 );
			}
			/* opinionated */
			border-radius: 0;
			.c-toggleTrigger {
			/* opinionated */
			border-radius: 0 0 .5em .5em;
			}
		}
		& ~ .c-nav.-collapsible > .c-toggleTrigger:after {
			content: "close";
		}
		& ~ .c-nav.-collapsible > .c-toggleTrigger.--viewWithIcon:after {
			content: "\f127\00a0 CLOSE";
		}
		& ~ .c-nav.-collapsible > .c-toggleTrigger.--viewIconOnly:after {
			content: "\f127";
		}
	}
}
.c-toggleTrigger{
	display: none;
	cursor: pointer;
	text-align: center;
	letter-spacing: .2rem;
	font-weight: 900;
	height: 2rem;
	margin-bottom: 1em;
	/* font-size: .75em; */
	/* line-height: 2; */
	text-transform: lowercase;
	font-variant: small-caps;
	background-color: var(--baseColor);
	padding-left: .5rem;
	padding-right: .5rem;

	&.--viewIconOnly, &.--viewWithIcon {
		font-family: 'pxl-icon', var(--mainFont);
		text-transform: unset;
		font-variant: unset;
	}
	&.--viewWithIcon {
		font-size: .75em;
		line-height: 2;
		text-transform: unset;
		font-variant: unset;
	}
	&.--viewIconOnly {
		padding-left: 1rem;
		padding-right: 1rem;
		font-weight: 400;
		font-size: 1.5em;
		line-height: 1;
	}
	&:after{
		content: "menu";
	}
	&.--viewIconOnly:after{
		content: "\f139";
	}
	&.--viewWithIcon:after{
		content: "\f139\00a0MENU";
	}
	&:hover, &:focus {
		background-color: var(--textColor);
		color: var(--baseColor);
	}
}

/* Tags */
.c-nav.-viewTag {
	display: inline-block;
	@mixin fontSize6;
	.c-nav__item {
		float: left;
		margin-right: .5em;
		margin-bottom: .5em;
		a {
			--borderWidth: 1px;
			border-width: var(--borderWidth);
			padding: calc(.25em - var(--borderWidth)) calc(.8em - var(--borderWidth));

			background-color: var(--textColorTransparent);
			--navRadius: var(--radiusMedium);
		}
		&:hover, &:focus {
			> a {
				border-color: currentColor;
				/* color: var(--baseColor); */
			}
		}
		&:active {
			> a {
				--borderWidth: 2px;
			}
		}
	}
}
