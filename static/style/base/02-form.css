/* Base and Opinionated Form, Input Styles */

/***** Input Styles
 */
input, textarea, [contenteditable=true] {
	accent-color: var(--colorAccent);
	caret-color: var(--colorAccent);
	/* caret-shape: block; */
}
:read-write{
	user-select:text;
}
textarea:read-only{
	user-select:none;
}
label {
	user-select: none; /* opinionated */
	font-size: calc(var(--typeScaleBase) * 1rem); /* 16px */
	line-height: calc(var(--rhythmUnit) * 3); /* 24px */
	/* padding-block: calc(var(--rhythmUnit) / 2); */

	/* @media (--lap-or-gt) { */
	/* 	@media (any-hover: hover) and (any-pointer: fine) { */
	/* 		@mixin fontSize5; */
	/* 	} */
	/* } */
}
:where(
input:where(:not([type=radio]):not([type=checkbox]):not([type=submit]):not([type=file]):not([type=button]):not([type=color]):not([type=reset]):not([type=range])),
select, textarea
) {
	border-color: currentColor;
	border-collapse: collapse;
	background-color: transparent;
	color: inherit;
	border-radius: var(--radiusDefault);
	/* margin-block-start: calc(var(--borderS) * -2); */


}
:where(
input:where(:not([type=radio]):not([type=checkbox]):not([type=submit]):not([type=file]):not([type=button]):not([type=color]):not([type=reset]):not([type=range])),
select:not([multiple=multiple]), textarea
){
	border: var(--borderS) solid;
	padding-block: 0;
	padding-inline: 1ch;
	--inputBlockSize: calc(var(--rhythmUnit)*5);
	/* --inputInlineSize: 25ch; */
	--inputInlineSize: 18ch;
	block-size: var(--inputBlockSize);
	min-inline-size: var(--inputInlineSize);
	@media (any-hover: hover) and (any-pointer: fine) {
		--inputBlockSize: calc(var(--rhythmUnit)*3);
	}
	/* opinionated */
	/* border-width: 0 0 var(--borderS) var(--borderS); */
	/* border-style: solid; */
	/* border-radius: 0 0 0 var(--radiusM); */

	/* @mixin fontSize4; */

	/* @media (any-hover: hover) and (any-pointer: fine) { */
	/* 	@mixin fontSize5; */
	/* } */
	/* &:focus { */
	&:focus-visible {
		background-color: var(--colorFront);
		color: var(--colorTextBolder);
		box-shadow: inset 0 0 0 var(--borderS) currentColor;
		&:required:invalid {
			box-shadow: inset 0 0 0 var(--borderS) var(--red);
		}
		&:required:valid {
			box-shadow: inset 0 0 0 var(--borderS) var(--green);
		}
	}
	/* &:active { */
	/* 	color: var(--colorLinkActive); */
	/* 	box-shadow: inset 0 0 0 2px currentColor; */
	/* } */
	&:invalid, &:required:invalid {
		box-shadow: none;
	}
}
input:is([type=date i],[type=number],[type=week i],[type=month i]){
	min-inline-size: auto;
}
/* Move label to the top when it's placed next to textarea element with large height,
 * :has still doesn't work in Firefox currently but including this since it's not so crucial */
label:has(+ textarea){
	vertical-align: top;
}
/* Minimum height for textarea Element */
textarea {
	inline-size: 100%;
	/* max-inline-size: 72ch; */
	min-block-size: calc(var(--rhythmUnit)*9);
}
input[type=file] {
	--border: var(--borderM);
	/* border: none; */
	padding: calc(var(--rhythmUnit) * 2 - var(--border));
	border: var(--border) dashed var(--colorTextOpac40);
	border-radius: var(--radiusDefault);
	/* margin-inline-end: calc(var(--border)*-2); */
	/* padding: none; */
	/* &:active, &:focus-within, &:has() { */
	/* 	--border: var(--borderL); */
	/* 	border-color: var(--colorAccent); */
	/* } */

	max-inline-size: 35ch;
	inline-size: 100%;
}
::-webkit-file-upload-button {
	appearance: none;
	color: currentColor; /* Text color needs to change if system color scheme is different than the theme */

	/* Should be same as button style */
	--sizeButton: calc(var(--rhythmUnit)*5);/* Base height of every button in touch interface */
	border:0;
	cursor: pointer;
	--fontWeight: 550;
	@mixin fontSize4;
	padding-block: calc((var(--sizeButton) - var(--lineHeight))/2);
	padding-inline: 1ch;
	border-radius: var(--radiusDefault);
	background-color: var(--colorFront);

	@media (any-pointer: fine){
		--sizeButton: calc(var(--rhythmUnit)*4); /* Base height of every button*/
	}
	/* &:hover, &:focus { */
	&:hover, &:focus-visible {
		box-shadow: inset 0 0 0 var(--borderS) currentColor;
		background-color: var(--colorFrontmost);
	}
	&:active {
		/* box-shadow: inset 0 0 0 var(--borderM) currentColor; */
		box-shadow: inset 0 0 0 var(--borderM) var(--colorAccent);
	}
}
/* Custom date picker icon for WebKit/Chrome browsers */
:is(input[type=date i],input[type=month i],input[type=week i], input[type=datetime-local i])::-webkit-calendar-picker-indicator {
	background-position: center;
	background-image: url("data:image/svg+xml,%3Csvg width='18' height='18' xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd%3Bclip-rule:evenodd%3Bstroke-linecap:square%3Bstroke-miterlimit:5'%3E%3Cpath d='M12 1v4M8 3h1M4 8h1v1H4V8ZM8 8h1v1H8V8ZM12 8h1v1h-1V8ZM12 12h1v1h-1v-1ZM8 12h1v1H8v-1ZM4 12h1v1H4v-1ZM5 1v4' style='fill:none%3Bstroke:%23000%3Bstroke-width:2px'/%3E%3Cpath d='M15 3h1v13H1V3h1' style='fill:none%3Bstroke:%23000%3Bstroke-width:2px'/%3E%3C/svg%3E");
	:where(.t-color:is([data-theme=dark],.-forceDark:not([data-theme=dark]))) & {
		background-image: url("data:image/svg+xml,%3Csvg width='18' height='18' xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd%3Bclip-rule:evenodd%3Bstroke-linecap:square%3Bstroke-miterlimit:5'%3E%3Cpath d='M12 1v4M8 3h1M4 8h1v1H4V8ZM8 8h1v1H8V8ZM12 8h1v1h-1V8ZM12 12h1v1h-1v-1ZM8 12h1v1H8v-1ZM4 12h1v1H4v-1ZM5 1v4' style='fill:none%3Bstroke:%23FFF%3Bstroke-width:2px'/%3E%3Cpath d='M15 3h1v13H1V3h1' style='fill:none%3Bstroke:%23FFF%3Bstroke-width:2px'/%3E%3C/svg%3E");
	}
}
/* Set geometry for datalist arrow and calendar picker button inside webkit date and datalist inputs */
input::-webkit-calendar-picker-indicator{
	cursor: pointer;
	width: calc(var(--rhythmUnit)*2);
	height: calc(var(--rhythmUnit)*3);
	padding: 0 1ch;
	position: relative;
	right: calc(var(--rhythmUnit)*-1);
	border: 0 0 0 var(--borderDefault) solid currentColor;
	/* Don't hide datalist arrow inside webkit datalist input when it's not hovered */
	opacity: 1;
	&:hover {
		background-color: var(--colorTextOpac20);
	}
}
/* Don't hide spin buttons inside webkit number input when it's not hovered */
input::-webkit-inner-spin-button {
	opacity: 1;
	background: red;
}

input[type=color] {
	/* border-radius: .4em; */
	/* border-radius: var(--radiusS); */
	:where([class*=-cornerRounded]) & {
		/* Make color input rounded if any rounded corner theme modifier exists. */
		border-radius: var(--radiusM);
	}
	border:0;
	block-size:calc(var(--rhythmUnit)*4);
	background-color: var(--colorText);
}
::placeholder{
	/* color: currentColor; */
	color: var(--colorTextOpac60);
}
/* ::-webkit-calendar-picker-indicator { */
/* 	display: none; */
/* } */

/*** Button
 *
 * Info: Usually, c-button should has it's own style file in the component folder, but since extend will not function as intended, this is an exception.
 */
:is(input[type=button],input[type=submit],input[type=reset],button,.c-button) {
	/* line-height: 2.5em;  */
	--sizeButton: calc(var(--rhythmUnit)*5);/* Base height of every button in touch interface */
	border:0;
	cursor: pointer;
	--fontWeight: 550;
	/* opinionated */
	/* margin-block-end: calc(var(--rhythmUnit) / 2); */
	/* margin-block-end: var(--rhythmUnit); */
	/* -opinionated */
	/* min-block-size: 1.25rem; */

	/* padding: 0 var(--radiusM); */
	/* padding-block: ; */
	@mixin fontSize4;
	padding-block: calc((var(--sizeButton) - var(--lineHeight))/2);
	padding-inline: 1ch;

	border-radius: var(--radiusDefault);

	background-color: var(--colorFront);
	/* color: var(--colorBase); */

	label {
		cursor: pointer;
		/* display: block; */
		/* position: relative; */
		/* Negative of parent padding value */
		/* top: calc( calc((var(--sizeButton) - var(--lineHeight))/2) * -1); */
		/* left: calc( var(--nav-item-padSide) * -1); */

	}
	@media (any-pointer: fine){
		--sizeButton: calc(var(--rhythmUnit)*4); /* Base height of every button*/
	}
	&[disabled]{
		user-select: none;

	}
	/* &:hover, &:focus { */
	&:not([disabled]):hover, &:not([disabled]):focus-visible {
		box-shadow: inset 0 0 0 var(--borderS) currentColor;
		background-color: var(--colorFrontmost);
	}
	&:not([disabled]):active {
		box-shadow: inset 0 0 0 var(--borderM) currentColor;
	}

	/* TODO: Button spacing needs rework */
	& + & {
		margin-left: .25em;
	}
	/* experimental */
	&.-viewHexagon {
		/* Taken from polymc.com, I don't know the exact source but it deserves a credit! */
		clip-path: polygon(.6em 0,calc(100% - .6em) 0,100% 50%,calc(100% - .6em) 100%,.6em 100%,0 50%);
		&:active {
			box-shadow: none;
		}
	}
	/* -experimental */
	/* experimental */

	/*** Spinner Animation
	 * Used for feedback inside "Load More" button
	*/
	._spinner {
		border-radius: 50%;
		width: calc(var(--rhythmUnit)*2);
		height: calc(var(--rhythmUnit)*2);
		border: calc(var(--rhythmUnit)/4) solid transparent;
		border-top-color: currentColor;
		animation: spin 1s infinite linear;
		margin: auto;
		/*---*/
		position: absolute;
		right:calc(var(--rhythmUnit)/4);
		bottom:calc(var(--rhythmUnit)/4);
	}
	/* -experimental */
}
.c-button.-primary {
	/* Button style for the default/primary action of user */
	background-color: var(--colorText);
	color: var(--colorBase);
	/* &:hover, &:focus { */
	&:hover, &:focus-visible {
		background-color: var(--colorTextBolder);
	}
	&:active {
		box-shadow: inset 0 0 0 var(--borderM) currentColor;
	}
}
/* .c-button--secondary, .c-button--tertiary { */
/* } */

/*** Default Select Box Style
 */
/* select{ */
/* } */
select {
	--iconWidth: 24px;
	/* border-right: calc(var(--rhythmUnit)*2) solid; */
	/* ISSUE: colorText variable or currentColor value doesn't work inside background url, as it's handled as external source. */

	/* Make space for custom select arrow icon in Firefox. (Chrome does that automatically except for multiple select menu) */
	/* padding-inline-end: calc(var(--iconWidth)+2ch); */
	padding-inline-end: var(--iconWidth);

	/* Position and size for custom select arrow icon */
	background-repeat: no-repeat;
	background-position: right center;
	/* background-size: 2rem; */
	background-size: var(--iconWidth) 18px;

	/* Custom arrow icon for select menu */
	/* Note: Make sure svg width is same as --iconWidth here. */
	background-image: url("data:image/svg+xml,%3Csvg width='24' height='18' xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd%3Bclip-rule:evenodd%3Bstroke-linecap:square%3Bstroke-miterlimit:2'%3E%3Cpath d='M9 3v12M13 5 9 1 5 5M5 13l4 4 4-4' style='fill:none%3Bstroke:%23000%3Bstroke-width:2px'/%3E%3C/svg%3E");
	:where(.t-color:is([data-theme=dark],.-forceDark:not([data-theme=dark]))) & {
		background-image: url("data:image/svg+xml,%3Csvg width='24' height='18' xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd%3Bclip-rule:evenodd%3Bstroke-linecap:square%3Bstroke-miterlimit:2'%3E%3Cpath d='M9 3v12M13 5 9 1 5 5M5 13l4 4 4-4' style='fill:none%3Bstroke:%23FFF%3Bstroke-width:2px'/%3E%3C/svg%3E");
	}

	/* background: none; */
	/* position: relative; */
	/* overflow: hidden; */

	/* View Shortcut for Multiple Select Menu in Firefox and Chrome
	 * (doesn't work in Safari)*/
	&[multiple=multiple]{
		/* padding-top: calc(var(--rhythmUnit)*5); */
		&:before {
			white-space:pre;
			content: "ctrl+click to Select Multiple Items";
			@mixin fontSize6;
			text-transform: uppercase;
			/* position: absolute; */
			opacity: .75;
			position: relative;
			top: calc(var(--rhythmUnit) * -.5);
		}
		:where(html):lang(tr) &:before {
			content: "çoklu seçim için ctrl+tık"
		}
	}
}
/* select[multiple=multiple]{ */
/* 	padding-inline: 1ch; */
/* } */
/* select:before, select:after { */
/* 	content: ''; */
/* 	position: absolute; */
/* 	z-index: 2; */
/* 	top: 9px; */
/* 	right: 10px; */
/* 	width: 0; */
/* 	height: 0; */
/* 	border: 4px dashed; */
/* 	border-color: var(--colorText) transparent; */
/* 	pointer-events: none; */
/* } */
/* select:before { */
/* 	border-bottom-style: solid; */
/* 	border-top: none; */
/* } */
/* select:after { */
/* 	margin-top: 7px; */
/* 	border-top-style: solid; */
/* 	border-bottom: none; */
/* } */

/*** Checkbox and Radio Buttons
 */
:where(input[type=checkbox],input[type=radio]){
	cursor: pointer;
	vertical-align: middle;
	/* width: 1.5rem; */
	/* height: 1.5rem; */
	width: calc(var(--rhythmUnit)*3);
	height: calc(var(--rhythmUnit)*3);
	color: var(--colorText);
	border: var(--borderM) solid;
	background-color: transparent;
	position: relative;
	/* Inner border hack */
	&:after {
		content: '';
		position: absolute;
		background: transparent;
		top: 0;
		left: 0;
		border-radius: inherit;
		width: 100%;
		height: 100%;
		/* border: calc(var(--borderM) * 2) solid transparent; */
		box-shadow: inset 0 0 0 calc(var(--rhythmUnit)*3) var(--colorBase);
		transition: box-shadow .25s cubic-bezier(0.34, 1.56, 0.64, 1);
	}
	&:checked:after{
		/* border-color: var(--colorBase); */
		box-shadow: inset 0 0 0 calc(var(--borderM) * 2) var(--colorBase);
		/* box-shadow: inset 0 0 0 0px var(--colorBase); */
	}

	&:checked{
		background-color: var(--colorTextBolder);
		/* background-color: var(--colorAccent); */
	}
	/* &:focus { */
	&:focus-visible {
		color: var(--colorAccent);
	}
}
input[type=checkbox] {
	/* border-radius: .375em; */
	/* border-radius: var(--radiusS); */
	border-radius: var(--radiusDefault);
	&:after{
		border-radius: calc(var(--radiusDefault) - var(--borderM) );
	}
}
input[type=radio] {
	border-radius: 50%;
}
:is(input,button)[disabled] {
	opacity: .66;
}

/* WebKit Search Input Styles */
input[type=search]::-webkit-search-cancel-button {
	appearance: none;
}

/*** Range Input
 * Source: https://smashingmagazine.com/2021/12/create-custom-range-input-consistent-browsers/
 */
input[type=range] {
	/* --sliderTrackWidth: 48px; */
	--sliderTrackWidth: 3rem;
	--sliderTrackThickness: calc(var(--rhythmUnit) / 2);
	--sliderThumbHeight: calc(var(--rhythmUnit) * 3);
	/* Reset every browser-specific styles */
	appearance: none;
	cursor: pointer;
	/* min-inline-size: calc(var(--sliderTrackWidth)*12); */
	width: 100%;
	max-inline-size: calc(var(--sliderTrackWidth)*7);
	-webkit-tap-highlight-color: transparent;
	background:none;
	/* height: 2em; */
	@media (any-hover: hover) and (any-pointer: fine) {
		--sliderTrackWidth: 1.5rem;
	}
}
input[type=range]:focus {
	/* Also reset the outline in order to replace it */
	outline: none;
}
/* Slider Track
 */
input[type=range]::-webkit-slider-runnable-track {
	/* width: 100%; */
	height: var(--sliderTrackThickness);
	/* animate: .2s; */
	/* box-shadow:none; */
	background: var(--colorText);
	border:none;
	.t-modRoot[class*="-cornerRounded"] & {
		/* border-radius: .125em; */
		border-radius: calc(var(--radiusS) / 2);
	}
}
input[type=range]::-moz-range-track {
	border:none;
	/* width: 100%; */
	height: var(--sliderThumbHeight);
	/* animate: .2s; */
	/* box-shadow:none; */
	background: var(--colorText);
	.t-modRoot[class*="-cornerRounded"] & {
		/* border-radius: .125em; */
		border-radius: calc(var(--radiusS) / 2);
	}
}
/* input[type=range]:focus::-webkit-slider-runnable-track { */
/* 	background: var(--colorText); */
/* } */
/* input[type=range]:focus::-moz-range-track { */
/* 	background: var(--colorText); */
/* } */

/* Slider Thumb
 */
input[type=range]::-webkit-slider-thumb {
	appearance: none;
	/* margin-top: -12.5px; */
	margin-top: calc(var(--sliderThumbHeight)/2*-1+calc(var(--sliderTrackThickness)/2));
	box-shadow:none; /* for iOS */
	border: calc(var(--radiusS) / 2) solid var(--colorBase);

	width: var(--sliderTrackWidth, 1rem);
	/* height: 1.75em; */
	height: calc(var(--rhythmUnit) * 3);

	background: var(--colorTextBolder);
	/* cursor: pointer; */
	border-radius: var(--radiusDefault);
	/* [class*="-cornerRounded"] & { */
	/* 	border-radius: var(--radiusM); */
	/* } */
}
input[type=range]::-moz-range-thumb {
	margin-block-start: var(--borderS);
	box-shadow:none; /* for iOS (haven't tested on Android)*/
	border: calc(var(--radiusS) / 2) solid var(--colorBase);

	width: var(--sliderTrackWidth, 1rem);
	/* height: 1.75em; */
	height: calc(var(--rhythmUnit) * 3);

	background: var(--colorTextBolder);
	border-radius: var(--radiusDefault);
}
/* Color Type Input for WebKit */
input[type=color i] {
	width: calc(var(--rhythmUnit)*4);
	height: calc(var(--rhythmUnit)*4);
	/* border: var(--borderM) solid currentColor; */
}

input[type=color i]::-webkit-color-swatch {
	border: 2px solid #0006;
	box-shadow: 0 0 0 2px #FFF6;
	/* border: var(--borderM) solid; */
	/* border-radius: calc(var(--radiusDefault) - var(--borderM)); */
	border-radius: var(--radiusDefault);
}
input[type=color i]::-webkit-color-swatch-wrapper{
	padding: 0;
}

/*** Fieldset Input
 */
fieldset {
	color: inherit;
	border: var(--borderHairline) solid;
	margin: var(--rhythmUnit);
	border-radius: var(--radiusInnerDefault);/* opinionated */
	padding-inline: 2ch;
	padding-block: calc(var(--rhythmUnit)*2 - var(--borderHairline));
	legend {
		padding-block: 0;
		padding-inline:.5ch;
	}
}
